image: node:11

stages:
- build
- test
- docker
- deploy

variables:
  CLI_VERSION: 7.2.3
  DOCKER_DRIVER: overlay2
  # DOCKER_HOST: tcp://docker:2375/
  DOCKER_HOST: /var/run/docker.sock
  UI_IMAGE: ${CI_REGISTRY_IMAGE}/ui
  CI_APPLICATION_TAG: $(echo ${CI_COMMIT_SHA} | cut -c1-8)


cache:
  key: $(CI_COMMIT_REF_SLUG)
  paths:
  - node_modules/
build:
  stage: build
  cache:
    key: $(CI_COMMIT_REF_SLUG)
    policy: push
    paths:
    - node_modules/
  before_script:
  - npm install --silent
  script:
  - node_modules/.bin/ng build --prod
  artifacts:
    expire_in: 2 months
    paths:
    - dist/
  # tags:
  # - docker

# test:e2e:
#   stage: test
#   allow_failure: true
#   script:
#   - node_modules/.bin/ng e2e
#   # tags:
#   # - docker

# test:karma:
#   stage: test
#   allow_failure: true
#   script:
#   - node_modules/.bin/ng test --code-coverage --progress false --watch false
#   coverage: '/Lines \W+: (\d+\.\d+)%.*/'
#   artifacts:
#     paths:
#     - coverage/
#   # tags:
#   # - docker

test:nglint:
  stage: test
  allow_failure: true
  script:
  - node_modules/.bin/ng lint
  # tags:
  # - docker

docker:
  image: docker:stable
  stage: docker
  services:
  - name: docker:18-dind
    entrypoint:
    - dockerd-entrypoint.sh
  before_script:
  - docker info
  script:
  - docker login -u deploy -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build . -t $UI_IMAGE:latest -t $UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8) --build-arg SSH_PRIVATE_KEY
  - docker push $UI_IMAGE:latest
  - docker push $UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8)

kube:
  image: docker:stable
  stage: deploy
  only:
    refs:
    - master
  script:
  - wget https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl
  - chmod +x kubectl
  - echo "$KUBE" > admin.conf
  - ./kubectl --kubeconfig admin.conf set image --namespace spp deployment.v1.apps/waveform-ui waveform-ui=registry.microquake.org/rio-tinto/microquake-waveform-ui/ui:$(echo $CI_COMMIT_SHA | cut -c1-8) --record
