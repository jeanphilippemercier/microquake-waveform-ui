stages:
- build
- test
- docker
- deploy

variables:
  CLI_VERSION: 7.2.3
  DOCKER_DRIVER: overlay2
  UI_IMAGE: ${CI_REGISTRY_IMAGE}/ui
  CI_APPLICATION_TAG: $(echo ${CI_COMMIT_SHA} | cut -c1-8)

cache:
  key: $(CI_COMMIT_REF_SLUG)
  paths:
  - node_modules/

  before_script:
  - apt-get update && apt-get install -y unzip fontconfig locales gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
  - npm install --silent

build:
  stage: build
  script:
  - node_modules/.bin/ng build --prod
  artifacts:
    expire_in: 2 months
    paths:
    - dist/
  # tags:
  # - docker

test:e2e:
  stage: test
  allow_failure: true
  script:
  - node_modules/.bin/ng e2e
  # tags:
  # - docker

test:karma:
  stage: test
  allow_failure: true
  script:
  - node_modules/.bin/ng test --code-coverage --progress false --watch false
  coverage: '/Lines \W+: (\d+\.\d+)%.*/'
  artifacts:
    paths:
    - coverage/
  # tags:
  # - docker

test:nglint:
  stage: test
  allow_failure: true
  script:
  - node_modules/.bin/ng lint
  # tags:
  # - docker

docker:
  image: docker:stable
  stage: docker
  services:
  - name: docker:stable-dind
    entrypoint:
    - dockerd-entrypoint.sh
  before_script:
  - apk add --update openssh-client make ca-certificates openssl python git bash
  script:
  - eval $(ssh-agent -s)
  - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'

  - mkdir -p ~/.ssh
  - chmod -R 700 ~/.ssh
  - ssh-keyscan -H git.microquake.org >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - git submodule update --init --recursive
  - update-ca-certificates

  - docker login -u deploy -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build . -t $UI_IMAGE:latest -t $UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8) --build-arg SSH_PRIVATE_KEY
  - docker push $UI_IMAGE:latest
  - docker push $UI_IMAGE:$(echo $CI_COMMIT_SHA | cut -c1-8)

kube:
  image: docker:stable
  stage: deploy
  only:
    refs:
    - master
  services:
  - name: docker:stable-dind
    entrypoint:
    - dockerd-entrypoint.sh
  before_script:
  - apk add --update openssh-client make ca-certificates openssl python git bash
  script:
  - wget https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl
  - chmod +x kubectl
  - echo "$KUBE" > admin.conf
  - ./kubectl --kubeconfig admin.conf set image deployment.v1.apps/waveform-ui-staging waveform-ui-staging=registry.microquake.org/rio-tinto/microquake-waveform-ui/ui:$(echo $CI_COMMIT_SHA | cut -c1-8) --record
